name: Build

on:
  push:
    branches: [main]
  pull_request:
    branches: '*'

env:
  CACHE_EPOCH: 0

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Install node
        uses: actions/setup-node@v2
        with:
          node-version: '14.x'
      - uses: actions/setup-python@v2
        with:
          python-version: '3.8'
      - name: Cache node modules
        uses: actions/cache@v2
        id: cache-node-modules
        with:
          path: 'node_modules/'
          key: |
            ${{ env.CACHE_EPOCH }}-${{ runner.os }}-node-modules-${{ hashFiles('yarn.lock') }}
      - name: Cache yarn packages
        uses: actions/cache@v2
        id: cache-yarn-packages
        if: steps.cache-node-modules.outputs.cache-hit != 'true'
        with:
          path: '.yarn-packages'
          key: |
            ${{ env.CACHE_EPOCH }}-yarn-packages-${{ hashFiles('yarn.lock') }}
          restore-keys: |
            ${{ env.CACHE_EPOCH }}-yarn-packages-
      - uses: actions/cache@v2
        with:
          path: ~/.cache/pip
          key: |
            ${{ env.CACHE_EPOCH }}-${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}
          restore-keys: |
            ${{ env.CACHE_EPOCH }}-${{ runner.os }}-pip-
      - name: Setup
        run: |
          pip install -U pip setuptools
          pip install -r requirements.txt
      - name: Install
        if: steps.cache-node-modules.outputs.cache-hit != 'true'
        run: |
          doit setup:js
      - name: Build
        run: |
          doit build
      - name: Lint
        run: |
          doit lint
      - name: Test
        run: |
          doit test
